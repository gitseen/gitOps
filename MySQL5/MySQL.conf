# 主从复制配置
#设置主服务器ID，这里的值自定义数字，建议为服务器ip最后一位
server-id=139
#启动MySql二进制日志系统
log-bin=/local/mysql-5.7.28/log/mysql-bin.log
#日志失效天数
expire_logs_days=10
#binlog大小
max_binlog_size=100M
#需要同步的数据库名，如果有多个数据库，可重复此参数，每个数据库一行
binlog_do_db=test_db
#不同步MySQL系统数据库
#binlog_ignore_db=mysql


主节点常用配置参数介绍
参数	描述
server-id=1	当前Mysql服务器标识
log-bin=mysql-bin	控制master的是否开启binlog记录功能
expire_logs_days=7	删除多少天之前的bin-log日志
binlog-do-db=task_db	指定数据库(举例 task_db库)的更新到二进制日志中
binlog-do-table=tb_user	指定表(tb_user)的更新到二进制日志中
binlog-do-table=mysql	指定不需要同步的数据库(举例 mysql库)
max_binlog_size	master的每个二进制日志文件的大小，默认1G、当日志文件到达1G会重新创建一个日志文件
log_slave_updates	此参数控制slave数据库是否把从master接受到的log并在本slave执行的内容记录到slave的二进制日志中，在级联复制环境中（包括双master环境），这个参数是必须的
原文链接：https://blog.csdn.net/yeming_666/article/details/106116163
#from https://www.cnblogs.com/rxysg/p/15687542.html
#https://blog.csdn.net/yeming_666/article/details/106116163
#https://blog.csdn.net/fupinghaohao/article/details/124931727


[mysqld]
user = mysql
port = 13306
socket = /tmp/mysql.sock
datadir = /mysql/mysql/data
character-set-server = utf8
transaction_isolation = READ-COMMITTED   #默认事务隔离级别
symbolic-links = 0                       #禁用符号链接功能
key_buffer_size = 256M                   #索引缓存区大小(适用于MyISAM存储引擎)
max_connections = 10000                  #允许的最大并发连接数
max_connect_errors = 10                  #主机连接错误次数上限
max_allowed_packet = 64M                 #单个SQL语句允许的最大数据包大小
max_heap_table_size = 512M               #内存临时表的最大大小
tmp_table_size = 512M                    #内存中临时表的最大大小(与max_heap_table_size值相等）
thread_stack = 512k                      #每个线程的堆栈大小(默认256KB~1MB)用于存储线程的局部变量和执行状态
thread_cache_size = 300                  #缓存空闲线程的数量,避免频繁创建/销毁线程的开销SHOW GLOBAL STATUS LIKE ['Threads_created'|'Connections'];
#query_cache_limit = 32M                  #单个查询结果能被缓存的最大值。超过此大小的查询结果不会被缓存; MySQL8查询缓存(Query Cache)已被彻底移除
#query_cache_size = 256M                 #查询缓存的总内存大小。缓存SELECT语句及其结果集,加速重复查询; MySQL8查询缓存(Query Cache)已被彻底移除
#query_cache_type = 1                    #控制查询缓存的行为;MySQL8查询缓存(Query Cache)已被彻底移除

group_concat_max_len = 102400            #GROUP_CONCAT()函数返回结果的最大长度(默认1024字节)
table_open_cache = 4096                  #MySQL缓存已打开表句柄数量,减少频繁开关表的开销
event_scheduler = ON                     #启用MySQL事件调度器,支持定时执行SQL任务(如数据清理、统计)
skip-name-resolve = ON                   #禁用反向DNS解析,加速客户端连接验证(ON使用IP连库)
lower_case_table_names = 1               #设置表名和数据库名在文件系统中的存储方式(不区分大小写)
read_buffer_size = 32M                   #设置顺序读取(如全表扫描)时的缓存区大小
read_rnd_buffer_size = 256M              #设置随机读取(如通过索引回表)时的缓存区大小
sort_buffer_size = 64M                   #设置排序操作(ORDER BY、GROUP BY)的缓存区大小
join_buffer_size = 64M                   #设置JOIN操作的缓存区大小（用于非索引关联）
bulk_insert_buffer_size = 512M           #设置批量插入(如INSERT ... SELECT、LOAD DATA)的缓存区大小 与 innodb_flush_log_at_trx_commit=2配合使用

sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES  #设置MySQL的SQL语法验证规则;NO_ENGINE_SUBSTITUTION禁止自动替换存储引擎(如CREATE TABLE时）、STRICT_TRANS_TABLES：对事务表(如InnoDB）启用严格模式,拒绝无效数据。
#sql_mode=STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER


#######InnoDB-configuration########
innodb_file_per_table = 1                #控制InnoDB是否为每个表单独创建.ibd文件存储数据和索引
innodb_buffer_pool_size = 16G            #InnoDB存储引擎的缓冲池大小,用于缓存数据页、索引页和自适应哈希索引(设置为物理内存的60-80%(如16GB内存可设为12GB))
innodb_thread_concurrency = 16           #限制InnoDB内核线程的最大并发数(默认值0表示不限制,由操作系统调度);多核服务器可设置为CPU核心数的2倍左右 
innodb_flush_log_at_trx_commit = 2       #控制事务提交时日志写入磁盘的策略;每次事务提交写入日志缓冲区,但由操作系统决定何时刷新（折中方案）
innodb_flush_method = O_DIRECT           #控制InnoDB 刷新数据和日志到磁盘的方式
innodb_log_buffer_size = 64M             #设置InnoDB日志缓冲区的大小,用于暂存事务日志
innodb_log_file_size = 1024M             #设置InnoDB重做日志(redo log)文件的单个大小
innodb_log_files_in_group = 4            #设置InnoDB重做日志文件的数量
innodb_max_dirty_pages_pct = 90          #设置缓冲池中脏页(已修改但未刷新到磁盘)的最大百分比 (默认值：MySQL5.7 75%、MySQL8.0 90%)
innodb_lock_wait_timeout = 120           #设置事务等待锁的超时时间（单位：秒）
#innodb_force_recovery = 1               #强制InnoDB在崩溃后恢复,即使数据可能损坏

#######Master--configuration########
server-id = 1
log-bin = mysql-bin                      #启用二进制日志,记录所有修改数据的SQL语句(INSERT、UPDATE、DELETE);主从复制(Slave通过读取Master的binlog实现数据同步）
binlog_format = mixed                    #设置二进制日志的记录格式
#log_slave_updates = ON                  #允许从服务器将自己执行的更新操作记录到二进制日志中 #简单一主一从(只读)不需要; 多级复制或双主架构必须开启log_slave_updates = ON 
sync_binlog = 1                          #控制二进制日志写入磁盘的频率(每次事务提交都刷新(最安全,确保不丢数据))  sync_binlog = 1 #确保事务安全 
binlog_group_commit_sync_delay = 100     #设置组提交时等待的微秒数,允许更多事务批量写入日志
binlog_cache_size = 32M                  #为每个连接的事务分配的二进制日志缓存大小
binlog_expire_logs_seconds = 604800      #设置二进制日志的过期时间(7天),自动清理旧日志。MySQL5.7及以下版本使用expire_logs_days = 7
log_bin_trust_function_creators = 1      #允许创建不确定的函数(如包含时间函数) 1可信任函数创建者,避免此类错误
max_binlog_size = 256M                   #设置单个二进制日志文件的最大大小
#binlog-do-db = xxl                      #指定同步xxl库


#######logs--configuration########
slow_query_log = 1                       #启用慢查询日志,记录执行时间超过long_query_time的查询
slow_query_log_file = /mysql/mysql/logs/slow.log
long_query_time = 5

log-error = /mysql/mysql/logs/mysql-error.log  #error LOG
general_log = 1                                
general_log_file = /mysql/mysql/logs/mysql-query.log #启用通用查询日志，记录所有客户端的 SQL 语句（包括 SELECT）
slow_query_log = 1
slow_query_log_file = /mysql/mysql/logs/mysql-slow.log
#pid-file = /mysql/mysql/logs/mysqld.pid

[mysqldump]
quick
max_allowed_packet = 64M

[mysql]
no-auto-rehash

[myisamchk]
key_buffer = 16M
sort_buffer_size = 16M
read_buffer = 8M
write_buffer = 8M

[mysqlhotcopy]
interactive-timeout

[mysqld_safe]
open-files-limit = 65535
log-error=/mysql/mysql/logs/mysqld.log
pid-file=/mysql/mysql/logs/mysqld.pid


